{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","services/apiService.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","fetchService","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","url","alt","largeImage","src","data-image","ImageGalleryItemImage","ImageGallery","pictures","onClick","map","id","webformatURL","tags","largeImageURL","Button","text","fetchPictures","prototype","PropTypes","string","isRequired","func","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","children","App","isLoading","error","showModal","modalImageUrl","modalImageAlt","onChangeQuery","options","picture","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","handleImage","nodeName","dataset","image","onCloseModal","prevProps","shouldShowLoadBtn","length","color","height","width","radius","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c314aaa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3Kfvj\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__Y0pIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1nn-y\",\"Modal\":\"Modal_Modal__9wKGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2XuP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3TCyG\"};","import axios from 'axios';\r\n\r\nconst apiKey = '19969795-0e842fcefe638df843a1829e0';\r\n\r\n  const fetchService = ({ searchQuery = \"\", currentPage = 1, pageSize = 12 }) => {\r\n    return (axios\r\n        .get(`https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,)\r\n        .then(response => response.data.hits));\r\n};\r\n\r\n\r\nexport default fetchService;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Searchbar.module.css\"\r\n\r\n\r\n\r\nclass Searchbar extends Component{\r\nstatic propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = {\r\n       query: '' \r\n    }\r\n\r\n    handleChange = (event) => {\r\n       this.setState({query: event.currentTarget.value})\r\n    }\r\n    \r\n    handleSubmit=(event)=> {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.query)\r\n        this.setState({query:\"\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    <header className={styles.Searchbar}>\r\n    <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n    <button type=\"submit\" className={styles.SearchFormButton}>\r\n    <span className={styles.SearchFormButtonLabel}>Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className={styles.SearchFormInput}\r\n      type=\"text\"\r\n      value={this.state.query}\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n      onChange={this.handleChange}\r\n    />\r\n  </form>\r\n</header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import React from \"react\";\r\nimport styles from \"./ImageGalleryItem.module.css\"\r\n\r\nconst ImageGalleryItem = ({url,alt,largeImage}) => (\r\n    <>\r\n<img src={url} alt={alt} data-image={largeImage} className={styles.ImageGalleryItemImage}></img>\r\n    </>\r\n        \r\n)\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ImageGallery.module.css\"\r\n\r\n\r\n\r\nconst ImageGallery = ({pictures, onClick}) => \r\n    (<ul className={styles.ImageGallery} onClick={onClick}>\r\n        {pictures.map(({ id, webformatURL, tags, largeImageURL }) =>\r\n        (<li key={id}\r\n        className={styles.ImageGalleryItem}>\r\n            <ImageGalleryItem url={webformatURL} alt={tags} largeImage={largeImageURL} />\r\n           </li>))}\r\n    </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n     pictures: PropTypes.arrayOf(PropTypes.shape({\r\n         id: PropTypes.number.isRequired,\r\n         webformatURL: PropTypes.string.isRequired,\r\n         tags: PropTypes.string.isRequired,\r\n         largeImageURL: PropTypes.string.isRequired\r\n     })).isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n   }\r\n\r\nexport default ImageGallery;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Button.module.css\"\r\n\r\nconst Button = ({text, fetchPictures}) => (\r\n    <button className={styles.Button} type=\"button\" onClick={()=>fetchPictures()}>{text}</button>\r\n)\r\n\r\nButton.prototype = {\r\n    text: PropTypes.string.isRequired,\r\n    fetchPictures: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button;","import React, {Component} from \"react\";\r\nimport { createPortal } from \"react-dom\"\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Modal.module.css\"\r\n\r\nconst modalRoot=document.querySelector(\"#modal-root\")\r\n\r\n\r\nclass Modal extends Component{\r\n\r\n     static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.addEventListener('keydown', this.handleKeydown)\r\n    };\r\n\r\n      componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown)\r\n}\r\n\r\n    handleKeydown = (event) => {\r\n        if (event.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = (event) => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return createPortal(<div className={styles.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={styles.Modal}>{this.props.children}\r\n        </div>\r\n    </div>, modalRoot)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Modal;","import React, { Component } from \"react\";\nimport fetchService from \"./services/apiService\"\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from\"./components/ImageGallery\"\nimport Button from \"./components/Button\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Modal from \"./components/Modal\";\n\n\nclass App extends Component{\n  state = {\n    pictures: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n    showModal: false,\n    modalImageUrl: \"\",\n    modalImageAlt: \"\"\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures();\n    \n    }\n  }\n\n  \n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      pictures: [],\n      currentPage: 1,\n      error: null\n    })\n   }\n\n  fetchPictures = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({isLoading: true});\n\n   fetchService(options)\n      .then(picture => {\n      \n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...picture],\n          currentPage: prevState.currentPage+1\n          \n        }))\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      }).catch(error=> this.setState({error})).finally(()=>this.setState({isLoading:false}))\n  }\n\n  handleImage = (event) => {\n    if (event.target.nodeName !== 'IMG') {\n      return\n    }\n    this.setState({\n      modalImageUrl: event.target.dataset.image,\n      modalImageAlt: event.target.alt,\n       showModal: true\n    })\n  }\n\n  onCloseModal = (event) => {\n    this.setState({\n      modalImageUrl: '',\n      modalImageAlt: '',\n      showModal: false\n    })\n  }\n    \n\n  render() {\n    const { pictures, isLoading, error, showModal, modalImageUrl, modalImageAlt} = this.state;\n    const shouldShowLoadBtn = pictures.length > 0 && !isLoading;\n   return (\n     <>\n       <Searchbar onSubmit={this.onChangeQuery} />\n       {error && <h1>Something went wrong...try again later!</h1>}\n       <ImageGallery pictures={pictures} onClick={this.handleImage}/>\n       {isLoading && <Loader type=\"Oval\" color=\"#3f51b5\" height={80} width={80} radius={100} timeout={7000} />}\n       {shouldShowLoadBtn && <Button text=\"Load more\" fetchPictures={this.fetchPictures} />}\n       {showModal && <Modal onClose={this.onCloseModal}><img src={modalImageUrl} alt={modalImageAlt}/></Modal>}\n      </>\n  )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__-bzbJ\",\"SearchForm\":\"Searchbar_SearchForm__8D6Ry\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2e3ck\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2pBjr\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2Rltk\"};"],"sourceRoot":""}